{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let DataService = /*#__PURE__*/(() => {\n  class DataService {\n    // // favAdded Observable -- newly added favorite\n    // private fav = new BehaviorSubject<boolean>(false);\n    // favAdded = this.fav.asObservable(); \n    // // newFav Observable -- newly added favorite\n    // private rmFav = new BehaviorSubject<any>({});\n    // removeFav = this.rmFav.asObservable(); \n    constructor() {\n      // searching Observable -- boolean\n      this.srching = new BehaviorSubject(false);\n      this.searching = this.srching.asObservable(); // searchData Observable -- coords, forecastLocation\n\n      this.srchData = new BehaviorSubject({});\n      this.searchData = this.srchData.asObservable(); // tomorrowObject Observable -- tomorrow.io response object\n\n      this.tmrObj = new BehaviorSubject({});\n      this.tomorrowObject = this.tmrObj.asObservable(); // freshSearch Observable\n\n      this.frSrch = new BehaviorSubject({});\n      this.freshSearch = this.frSrch.asObservable();\n    }\n\n    setSearching(data) {\n      this.srching.next(data);\n    }\n\n    updateSearchData(data) {\n      this.srchData.next(data);\n    }\n\n    updateTomorrowObject(data) {\n      this.tmrObj.next(data);\n    }\n\n    updateFreshSearch(data) {\n      this.frSrch.next(data);\n    }\n\n  }\n\n  DataService.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)();\n  };\n\n  DataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n  return DataService;\n})();","map":null,"metadata":{},"sourceType":"module"}