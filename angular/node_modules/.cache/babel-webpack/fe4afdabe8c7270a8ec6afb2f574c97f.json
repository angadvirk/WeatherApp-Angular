{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { startWith } from 'rxjs/operators';\nimport { debounceTime } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../data.service\";\nimport * as i2 from \"../http.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/autocomplete\";\nimport * as i8 from \"@angular/material/core\";\n\nfunction SearchComponent_mat_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 80);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r2, \" \");\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nexport let SearchComponent = /*#__PURE__*/(() => {\n  class SearchComponent {\n    constructor(dataService, httpService, router) {\n      this.dataService = dataService;\n      this.httpService = httpService;\n      this.router = router; // api urls (for direct calls)\n\n      this.ipinfo_url = \"https://ipinfo.io/json?token=1d7082a2c0d29f\";\n      this.geocoding_url = \"https://maps.googleapis.com/maps/api/geocode/json\"; // api urls (for calls through backend proxy)\n\n      this.tomorrow_url = \"https://cs571-hw-project.wl.r.appspot.com/weather\";\n      this.autocomplete_url = \"https://cs571-hw-project.wl.r.appspot.com/autocomplete\"; // form\n\n      this.form = new FormGroup({\n        streetInput: new FormControl('', Validators.required),\n        cityInput: new FormControl('', Validators.required),\n        stateSelect: new FormControl('', Validators.required),\n        autodetectCheckbox: new FormControl('', Validators.required)\n      }); // variables\n\n      this.options = [];\n      this.autocomplete_response = [];\n      this.autodetect_checked = false;\n      this.states = {\n        \"AL\": \"Alabama\",\n        \"AK\": \"Alaska\",\n        \"AS\": \"American Samoa\",\n        \"AZ\": \"Arizona\",\n        \"AR\": \"Arkansas\",\n        \"CA\": \"California\",\n        \"CO\": \"Colorado\",\n        \"CT\": \"Connecticut\",\n        \"DE\": \"Delaware\",\n        \"DC\": \"District Of Columbia\",\n        \"FM\": \"Federated States Of Micronesia\",\n        \"FL\": \"Florida\",\n        \"GA\": \"Georgia\",\n        \"GU\": \"Guam\",\n        \"HI\": \"Hawaii\",\n        \"ID\": \"Idaho\",\n        \"IL\": \"Illinois\",\n        \"IN\": \"Indiana\",\n        \"IA\": \"Iowa\",\n        \"KS\": \"Kansas\",\n        \"KY\": \"Kentucky\",\n        \"LA\": \"Louisiana\",\n        \"ME\": \"Maine\",\n        \"MH\": \"Marshall Islands\",\n        \"MD\": \"Maryland\",\n        \"MA\": \"Massachusetts\",\n        \"MI\": \"Michigan\",\n        \"MN\": \"Minnesota\",\n        \"MS\": \"Mississippi\",\n        \"MO\": \"Missouri\",\n        \"MT\": \"Montana\",\n        \"NE\": \"Nebraska\",\n        \"NV\": \"Nevada\",\n        \"NH\": \"New Hampshire\",\n        \"NJ\": \"New Jersey\",\n        \"NM\": \"New Mexico\",\n        \"NY\": \"New York\",\n        \"NC\": \"North Carolina\",\n        \"ND\": \"North Dakota\",\n        \"MP\": \"Northern Mariana Islands\",\n        \"OH\": \"Ohio\",\n        \"OK\": \"Oklahoma\",\n        \"OR\": \"Oregon\",\n        \"PW\": \"Palau\",\n        \"PA\": \"Pennsylvania\",\n        \"PR\": \"Puerto Rico\",\n        \"RI\": \"Rhode Island\",\n        \"SC\": \"South Carolina\",\n        \"SD\": \"South Dakota\",\n        \"TN\": \"Tennessee\",\n        \"TX\": \"Texas\",\n        \"UT\": \"Utah\",\n        \"VT\": \"Vermont\",\n        \"VI\": \"Virgin Islands\",\n        \"VA\": \"Virginia\",\n        \"WA\": \"Washington\",\n        \"WV\": \"West Virginia\",\n        \"WI\": \"Wisconsin\",\n        \"WY\": \"Wyoming\"\n      };\n    }\n\n    ngOnInit() {\n      var _a, _b; // Fetching place as user types\n\n\n      (_a = this.form.get('cityInput')) === null || _a === void 0 ? void 0 : _a.valueChanges.pipe(debounceTime(500), startWith('')).subscribe(inputVal => {\n        if (inputVal && inputVal.length && inputVal.replace(/\\s/g, '').length) {\n          this.httpService.fetchData(this.autocomplete_url + '?input=' + inputVal).subscribe(data => {\n            if (data.status === \"OK\") {\n              for (var i = 0; i < data.predictions.length; i++) {\n                this.autocomplete_response.push({\n                  city: data.predictions[i].terms[0].value,\n                  state: data.predictions[i].terms[1].value\n                });\n              }\n\n              this.options = data.predictions.map(prediction => prediction.terms[0].value);\n              this.filteredOptions = this._filter(inputVal);\n            }\n          });\n        } else {\n          this.filteredOptions = [];\n        }\n      }); // Instant filtering as user types\n\n      (_b = this.form.get('cityInput')) === null || _b === void 0 ? void 0 : _b.valueChanges.subscribe(inputVal => {\n        this.filteredOptions = this._filter(inputVal);\n      });\n      this.dataService.freshSearch.subscribe(data => {\n        var _a, _b;\n\n        if (Object.keys(data).length > 0) {\n          let stateAbbrev = Object.keys(this.states).find(key => this.states[key] === data.state);\n          this.onAutoDetectClick({\n            target: {\n              checked: false\n            }\n          }); // simulate autoDetect being unchecked\n\n          (_a = this.form.get(\"cityInput\")) === null || _a === void 0 ? void 0 : _a.setValue(data.city);\n          (_b = this.form.get(\"stateSelect\")) === null || _b === void 0 ? void 0 : _b.setValue(stateAbbrev === null || stateAbbrev === void 0 ? void 0 : stateAbbrev.toString());\n          this.dataService.updateFreshSearch({});\n          this.onSubmit(this.form.value);\n        }\n      });\n    }\n\n    onSelectionChanged(event) {\n      var _a;\n\n      var stateResult = \"\";\n\n      for (var i = 0; i < this.autocomplete_response.length; i++) {\n        if (this.autocomplete_response[i].city === event.option.value) {\n          stateResult = this.autocomplete_response[i].state;\n          break;\n        }\n      }\n\n      (_a = this.form.get('stateSelect')) === null || _a === void 0 ? void 0 : _a.setValue(stateResult);\n    }\n\n    onAutoDetectClick(event) {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n\n      if (event.target.checked) {\n        // Clear & disable form fields\n        (_a = this.form.get('streetInput')) === null || _a === void 0 ? void 0 : _a.setValue(\"\");\n        (_b = this.form.get('cityInput')) === null || _b === void 0 ? void 0 : _b.setValue(\"\");\n        (_c = this.form.get('stateSelect')) === null || _c === void 0 ? void 0 : _c.setValue(\"\");\n        (_d = this.form.get('streetInput')) === null || _d === void 0 ? void 0 : _d.disable();\n        (_e = this.form.get('cityInput')) === null || _e === void 0 ? void 0 : _e.disable();\n        (_f = this.form.get('stateSelect')) === null || _f === void 0 ? void 0 : _f.disable();\n        this.autodetect_checked = true; // ipinfo gets called when search button is clicked\n      } else {\n        (_g = this.form.get('streetInput')) === null || _g === void 0 ? void 0 : _g.setValue(\"\");\n        (_h = this.form.get('cityInput')) === null || _h === void 0 ? void 0 : _h.setValue(\"\");\n        (_j = this.form.get('stateSelect')) === null || _j === void 0 ? void 0 : _j.setValue(\"\");\n        (_k = this.form.get('streetInput')) === null || _k === void 0 ? void 0 : _k.enable();\n        (_l = this.form.get('cityInput')) === null || _l === void 0 ? void 0 : _l.enable();\n        (_m = this.form.get('stateSelect')) === null || _m === void 0 ? void 0 : _m.enable();\n        (_o = this.form.get('streetInput')) === null || _o === void 0 ? void 0 : _o.markAsUntouched();\n        (_p = this.form.get('cityInput')) === null || _p === void 0 ? void 0 : _p.markAsUntouched();\n        (_q = this.form.get('stateSelect')) === null || _q === void 0 ? void 0 : _q.markAsUntouched();\n        this.autodetect_checked = false;\n        (_r = this.form.get('autodetectCheckbox')) === null || _r === void 0 ? void 0 : _r.setValue(false);\n        (_s = this.form.get('autodetectCheckbox')) === null || _s === void 0 ? void 0 : _s.markAsUntouched();\n      }\n    }\n\n    resetForm() {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n\n      (_a = this.form.get('streetInput')) === null || _a === void 0 ? void 0 : _a.setValue(\"\");\n      (_b = this.form.get('cityInput')) === null || _b === void 0 ? void 0 : _b.setValue(\"\");\n      (_c = this.form.get('stateSelect')) === null || _c === void 0 ? void 0 : _c.setValue(\"\");\n      (_d = this.form.get('streetInput')) === null || _d === void 0 ? void 0 : _d.enable();\n      (_e = this.form.get('cityInput')) === null || _e === void 0 ? void 0 : _e.enable();\n      (_f = this.form.get('stateSelect')) === null || _f === void 0 ? void 0 : _f.enable();\n      (_g = this.form.get('streetInput')) === null || _g === void 0 ? void 0 : _g.markAsUntouched();\n      (_h = this.form.get('cityInput')) === null || _h === void 0 ? void 0 : _h.markAsUntouched();\n      (_j = this.form.get('stateSelect')) === null || _j === void 0 ? void 0 : _j.markAsUntouched();\n      this.autodetect_checked = false;\n      (_k = this.form.get('autodetectCheckbox')) === null || _k === void 0 ? void 0 : _k.setValue(false);\n      (_l = this.form.get('autodetectCheckbox')) === null || _l === void 0 ? void 0 : _l.markAsUntouched();\n      this.clearFunction();\n    }\n\n    onSubmit(event) {\n      var _a, _b, _c;\n\n      this.clearFunction(); // clean things up before a new search...\n\n      this.dataService.setSearching(true); // to display progress bar\n\n      var api_url = '';\n\n      if (this.autodetect_checked) {\n        // select ipinfo_api\n        api_url = this.ipinfo_url;\n      } else {\n        // select geocoding_api\n        var street = (_a = this.form.get(\"streetInput\")) === null || _a === void 0 ? void 0 : _a.value.trim().replace(/,/g, '').replace(/\\s+/g, '%20');\n        var city = (_b = this.form.get(\"cityInput\")) === null || _b === void 0 ? void 0 : _b.value.trim().replace(/,/g, '').replace(/\\s+/g, '%20');\n        var state = (_c = this.form.get(\"stateSelect\")) === null || _c === void 0 ? void 0 : _c.value;\n\n        if (!state) {\n          state = \"CA\";\n        }\n\n        api_url = this.geocoding_url + \"?address=\" + street + city + state + \"&key=AIzaSyDe-gIMRLcnp3uVz9l4ZOrCoy9zwXLRohI\";\n      } // call ipinfo/geocoding and then tomorrow.io api\n\n\n      this.httpService.fetchData(api_url).subscribe(data => {\n        var _a, _b; // console.log(api_url);\n        // console.log(data);\n\n\n        var lat = '';\n        var lng = '';\n\n        if (api_url === this.ipinfo_url) {\n          // use ipinfo\n          lat = data.loc.split(',')[0];\n          lng = data.loc.split(',')[1]; // update searchData observable in dataService\n\n          this.dataService.updateSearchData({\n            lat: lat,\n            lng: lng,\n            forecastLocation: data.city + \", \" + data.region\n          });\n        } else {\n          // use geocoding\n          if (data.status === \"OK\") {\n            lat = String(data.results[0].geometry.location.lat);\n            lng = String(data.results[0].geometry.location.lng);\n            let forecastCity = (_a = this.form.get(\"cityInput\")) === null || _a === void 0 ? void 0 : _a.value.toString();\n            let forecastState = this.states[(_b = this.form.get(\"stateSelect\")) === null || _b === void 0 ? void 0 : _b.value.toString()]; // get state name from abbreviation\n\n            if (!forecastState) {\n              forecastState = \"California\";\n            } // update searchData observable in dataService\n\n\n            this.dataService.updateSearchData({\n              lat: lat,\n              lng: lng,\n              forecastLocation: forecastCity + \", \" + forecastState\n            });\n          } // else { \n          //   console.log(\"Geocoding API Error has occurred.\");\n          //   console.log(data);\n          // }\n\n        } //  call tomorrow.io\n\n\n        this.httpService.fetchData(this.tomorrow_url + '?' + 'lat=' + lat + '&' + 'lng=' + lng).subscribe(tomorrow_response => {\n          // do error-checking of tomorrow_response... if it's wrong, show error message and don't do anything else. \n          this.dataService.updateTomorrowObject(tomorrow_response);\n        });\n      });\n    }\n\n    clearFunction() {\n      this.dataService.setSearching(false);\n      this.dataService.updateSearchData({});\n      this.dataService.updateTomorrowObject({}); // clear tomorrowObject \n\n      if (this.router.url !== \"/results\") {\n        this.router.navigateByUrl(\"/results\"); // change route to results \n      }\n    }\n\n    _filter(value) {\n      const filterValue = value.toLowerCase().trim();\n      return this.options.filter(option => option.toLowerCase().includes(filterValue));\n    }\n\n  }\n\n  SearchComponent.ɵfac = function SearchComponent_Factory(t) {\n    return new (t || SearchComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.HttpService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  SearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SearchComponent,\n    selectors: [[\"app-search\"]],\n    decls: 155,\n    vars: 10,\n    consts: [[1, \"container\"], [\"id\", \"searchForm\", 1, \"jumbotron\", \"py-4\"], [1, \"text-center\"], [\"name\", \"form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"row\"], [\"for\", \"streetInput\", 1, \"col-sm-3\", \"col-form-label\"], [1, \"requiredStar\"], [1, \"col-sm-9\"], [\"type\", \"text\", \"id\", \"streetInput\", \"formControlName\", \"streetInput\", \"required\", \"\", 1, \"form-control\", 3, \"ngClass\"], [1, \"invalid-feedback\"], [\"for\", \"cityInput\", 1, \"col-sm-3\", \"col-form-label\"], [\"matInput\", \"\", \"type\", \"text\", \"id\", \"cityInput\", \"formControlName\", \"cityInput\", \"required\", \"\", 1, \"form-control\", 3, \"matAutocomplete\", \"ngClass\"], [3, \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"stateSelect\", 1, \"col-sm-3\", \"col-form-label\"], [1, \"col-sm-7\", \"col-md-5\", \"col-lg-4\"], [\"id\", \"stateSelect\", \"formControlName\", \"stateSelect\", 1, \"form-control\", \"custom-select\"], [\"value\", \"\", \"id\", \"defaultOption\", \"selected\", \"\"], [\"value\", \"AL\"], [\"value\", \"AK\"], [\"value\", \"AZ\"], [\"value\", \"AR\"], [\"value\", \"CA\"], [\"value\", \"CO\"], [\"value\", \"CT\"], [\"value\", \"DE\"], [\"value\", \"DC\"], [\"value\", \"FL\"], [\"value\", \"GA\"], [\"value\", \"HI\"], [\"value\", \"ID\"], [\"value\", \"IL\"], [\"value\", \"IN\"], [\"value\", \"IA\"], [\"value\", \"KS\"], [\"value\", \"KY\"], [\"value\", \"LA\"], [\"value\", \"ME\"], [\"value\", \"MD\"], [\"value\", \"MA\"], [\"value\", \"MI\"], [\"value\", \"MN\"], [\"value\", \"MS\"], [\"value\", \"MO\"], [\"value\", \"MT\"], [\"value\", \"NE\"], [\"value\", \"NV\"], [\"value\", \"NH\"], [\"value\", \"NJ\"], [\"value\", \"NM\"], [\"value\", \"NY\"], [\"value\", \"NC\"], [\"value\", \"ND\"], [\"value\", \"OH\"], [\"value\", \"OK\"], [\"value\", \"OR\"], [\"value\", \"PA\"], [\"value\", \"RI\"], [\"value\", \"SC\"], [\"value\", \"SD\"], [\"value\", \"TN\"], [\"value\", \"TX\"], [\"value\", \"UT\"], [\"value\", \"VT\"], [\"value\", \"VA\"], [\"value\", \"WA\"], [\"value\", \"WV\"], [\"value\", \"WI\"], [\"value\", \"WY\"], [1, \"col-sm-3\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"value\", \"\", \"formControlName\", \"autodetectCheckbox\", \"id\", \"autodetectCheckbox\", 1, \"form-check-input\", 3, \"click\"], [\"for\", \"autodetectCheckbox\", 1, \"form-check-label\"], [\"id\", \"searchButton\", \"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"16\", \"height\", \"16\", \"fill\", \"currentColor\", \"viewBox\", \"0 0 16 16\", 1, \"bi\", \"bi-search\"], [\"d\", \"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-dark\", \"secondaryButton\", 3, \"click\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"16\", \"height\", \"16\", \"fill\", \"currentColor\", \"viewBox\", \"0 0 16 16\", 1, \"bi\", \"bi-list-nested\"], [\"fill-rule\", \"evenodd\", \"d\", \"M4.5 11.5A.5.5 0 0 1 5 11h10a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5zm-2-4A.5.5 0 0 1 3 7h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm-2-4A.5.5 0 0 1 1 3h10a.5.5 0 0 1 0 1H1a.5.5 0 0 1-.5-.5z\"], [3, \"value\"]],\n    template: function SearchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"h4\", 2);\n        i0.ɵɵtext(3, \"Weather Search \\uD83C\\uDF24\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵelementStart(5, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function SearchComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onSubmit(ctx.form.value);\n        });\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelementStart(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Street\");\n        i0.ɵɵelementStart(9, \"span\", 6);\n        i0.ɵɵtext(10, \" *\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 7);\n        i0.ɵɵelement(12, \"input\", 8);\n        i0.ɵɵelementStart(13, \"div\", 9);\n        i0.ɵɵtext(14, \" Please provide a valid street. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 4);\n        i0.ɵɵelementStart(16, \"label\", 10);\n        i0.ɵɵtext(17, \"City\");\n        i0.ɵɵelementStart(18, \"span\", 6);\n        i0.ɵɵtext(19, \" *\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 7);\n        i0.ɵɵelement(21, \"input\", 11);\n        i0.ɵɵelementStart(22, \"mat-autocomplete\", 12, 13);\n        i0.ɵɵlistener(\"optionSelected\", function SearchComponent_Template_mat_autocomplete_optionSelected_22_listener($event) {\n          return ctx.onSelectionChanged($event);\n        });\n        i0.ɵɵtemplate(24, SearchComponent_mat_option_24_Template, 2, 2, \"mat-option\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 9);\n        i0.ɵɵtext(26, \" Please provide a valid city. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 4);\n        i0.ɵɵelementStart(28, \"label\", 15);\n        i0.ɵɵtext(29, \"State\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 16);\n        i0.ɵɵelementStart(31, \"select\", 17);\n        i0.ɵɵelementStart(32, \"option\", 18);\n        i0.ɵɵtext(33, \"Select your state\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"option\", 19);\n        i0.ɵɵtext(35, \"Alabama\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"option\", 20);\n        i0.ɵɵtext(37, \"Alaska\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"option\", 21);\n        i0.ɵɵtext(39, \"Arizona\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"option\", 22);\n        i0.ɵɵtext(41, \"Arkansas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"option\", 23);\n        i0.ɵɵtext(43, \"California\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"option\", 24);\n        i0.ɵɵtext(45, \"Colorado\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"option\", 25);\n        i0.ɵɵtext(47, \"Connecticut\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"option\", 26);\n        i0.ɵɵtext(49, \"Delaware\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"option\", 27);\n        i0.ɵɵtext(51, \"Dist of Columbia\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"option\", 28);\n        i0.ɵɵtext(53, \"Florida\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(54, \"option\", 29);\n        i0.ɵɵtext(55, \"Georgia\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"option\", 30);\n        i0.ɵɵtext(57, \"Hawaii\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"option\", 31);\n        i0.ɵɵtext(59, \"Idaho\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"option\", 32);\n        i0.ɵɵtext(61, \"Illinois\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"option\", 33);\n        i0.ɵɵtext(63, \"Indiana\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"option\", 34);\n        i0.ɵɵtext(65, \"Iowa\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(66, \"option\", 35);\n        i0.ɵɵtext(67, \"Kansas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"option\", 36);\n        i0.ɵɵtext(69, \"Kentucky\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(70, \"option\", 37);\n        i0.ɵɵtext(71, \"Louisiana\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(72, \"option\", 38);\n        i0.ɵɵtext(73, \"Maine\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"option\", 39);\n        i0.ɵɵtext(75, \"Maryland\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(76, \"option\", 40);\n        i0.ɵɵtext(77, \"Massachusetts\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(78, \"option\", 41);\n        i0.ɵɵtext(79, \"Michigan\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(80, \"option\", 42);\n        i0.ɵɵtext(81, \"Minnesota\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"option\", 43);\n        i0.ɵɵtext(83, \"Mississippi\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(84, \"option\", 44);\n        i0.ɵɵtext(85, \"Missouri\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(86, \"option\", 45);\n        i0.ɵɵtext(87, \"Montana\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(88, \"option\", 46);\n        i0.ɵɵtext(89, \"Nebraska\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(90, \"option\", 47);\n        i0.ɵɵtext(91, \"Nevada\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(92, \"option\", 48);\n        i0.ɵɵtext(93, \"New Hampshire\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(94, \"option\", 49);\n        i0.ɵɵtext(95, \"New Jersey\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(96, \"option\", 50);\n        i0.ɵɵtext(97, \"New Mexico\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(98, \"option\", 51);\n        i0.ɵɵtext(99, \"New York\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(100, \"option\", 52);\n        i0.ɵɵtext(101, \"North Carolina\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(102, \"option\", 53);\n        i0.ɵɵtext(103, \"North Dakota\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(104, \"option\", 54);\n        i0.ɵɵtext(105, \"Ohio\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(106, \"option\", 55);\n        i0.ɵɵtext(107, \"Oklahoma\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(108, \"option\", 56);\n        i0.ɵɵtext(109, \"Oregon\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(110, \"option\", 57);\n        i0.ɵɵtext(111, \"Pennsylvania\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(112, \"option\", 58);\n        i0.ɵɵtext(113, \"Rhode Island\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(114, \"option\", 59);\n        i0.ɵɵtext(115, \"South Carolina\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(116, \"option\", 60);\n        i0.ɵɵtext(117, \"South Dakota\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(118, \"option\", 61);\n        i0.ɵɵtext(119, \"Tennessee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(120, \"option\", 62);\n        i0.ɵɵtext(121, \"Texas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(122, \"option\", 63);\n        i0.ɵɵtext(123, \"Utah\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(124, \"option\", 64);\n        i0.ɵɵtext(125, \"Vermont\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(126, \"option\", 65);\n        i0.ɵɵtext(127, \"Virginia\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(128, \"option\", 66);\n        i0.ɵɵtext(129, \"Washington\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(130, \"option\", 67);\n        i0.ɵɵtext(131, \"West Virginia\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(132, \"option\", 68);\n        i0.ɵɵtext(133, \"Wisconsin\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(134, \"option\", 69);\n        i0.ɵɵtext(135, \"Wyoming\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(136, \"hr\");\n        i0.ɵɵelementStart(137, \"div\", 4);\n        i0.ɵɵelementStart(138, \"div\", 70);\n        i0.ɵɵtext(139, \"Auto-detect Location \");\n        i0.ɵɵelementStart(140, \"span\", 6);\n        i0.ɵɵtext(141, \" *\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(142, \"div\", 7);\n        i0.ɵɵelementStart(143, \"div\", 71);\n        i0.ɵɵelementStart(144, \"input\", 72);\n        i0.ɵɵlistener(\"click\", function SearchComponent_Template_input_click_144_listener($event) {\n          return ctx.onAutoDetectClick($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(145, \"label\", 73);\n        i0.ɵɵtext(146, \" Current Location \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(147, \"button\", 74);\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(148, \"svg\", 75);\n        i0.ɵɵelement(149, \"path\", 76);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(150, \" Search \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(151, \"button\", 77);\n        i0.ɵɵlistener(\"click\", function SearchComponent_Template_button_click_151_listener() {\n          return ctx.resetForm();\n        });\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(152, \"svg\", 78);\n        i0.ɵɵelement(153, \"path\", 79);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(154, \" Clear \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(23);\n\n        let tmp_5_0;\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, !ctx.form.get(\"streetInput\").disabled && ctx.form.get(\"streetInput\").touched && (ctx.form.get(\"streetInput\").invalid || !ctx.form.get(\"streetInput\").value.trim().length)));\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"matAutocomplete\", _r0)(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, !ctx.form.get(\"streetInput\").disabled && ctx.form.get(\"cityInput\").touched && (ctx.form.get(\"cityInput\").invalid || !ctx.form.get(\"cityInput\").value.trim().length)));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filteredOptions);\n        i0.ɵɵadvance(123);\n        i0.ɵɵproperty(\"disabled\", !((tmp_5_0 = ctx.form.get(\"streetInput\")) == null ? null : tmp_5_0.disabled) && (((tmp_5_0 = ctx.form.get(\"streetInput\")) == null ? null : tmp_5_0.invalid) || ((tmp_5_0 = ctx.form.get(\"cityInput\")) == null ? null : tmp_5_0.invalid) || !ctx.form.get(\"streetInput\").value.trim().length || !ctx.form.get(\"cityInput\").value.trim().length));\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i4.RequiredValidator, i5.NgClass, i6.MatInput, i7.MatAutocompleteTrigger, i7.MatAutocomplete, i5.NgForOf, i4.SelectControlValueAccessor, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.CheckboxControlValueAccessor, i8.MatOption],\n    styles: [\"\"]\n  });\n  return SearchComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}