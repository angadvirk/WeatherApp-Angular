{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../data.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nfunction TableComponent_div_1_tr_17_td_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵlistener(\"click\", function TableComponent_div_1_tr_17_td_1_div_1_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const column_r4 = i0.ɵɵnextContext().$implicit;\n      const row_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return ctx_r9.showDetails(row_r2[column_r4]);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r4 = i0.ɵɵnextContext().$implicit;\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(row_r2[column_r4]);\n  }\n}\n\nfunction TableComponent_div_1_tr_17_td_1_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 12);\n  }\n\n  if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵpropertyInterpolate1(\"src\", \"../../../../assets/images/\", row_r2[\"status_img\"], \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵpropertyInterpolate(\"alt\", row_r2[\"status\"]);\n  }\n}\n\nfunction TableComponent_div_1_tr_17_td_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r4 = i0.ɵɵnextContext().$implicit;\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(row_r2[column_r4]);\n  }\n}\n\nfunction TableComponent_div_1_tr_17_td_1_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r4 = i0.ɵɵnextContext().$implicit;\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(row_r2[column_r4]);\n  }\n}\n\nfunction TableComponent_div_1_tr_17_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtemplate(1, TableComponent_div_1_tr_17_td_1_div_1_Template, 2, 1, \"div\", 7);\n    i0.ɵɵtemplate(2, TableComponent_div_1_tr_17_td_1_img_2_Template, 1, 2, \"img\", 8);\n    i0.ɵɵtemplate(3, TableComponent_div_1_tr_17_td_1_div_3_Template, 2, 1, \"div\", 9);\n    i0.ɵɵtemplate(4, TableComponent_div_1_tr_17_td_1_div_4_Template, 2, 1, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", column_r4 === \"date\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", column_r4 === \"status\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", column_r4 === \"status\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", column_r4 !== \"status\" && column_r4 !== \"date\");\n  }\n}\n\nfunction TableComponent_div_1_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, TableComponent_div_1_tr_17_td_1_Template, 5, 4, \"td\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.headers);\n  }\n}\n\nfunction TableComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"table\", 2);\n    i0.ɵɵelementStart(2, \"thead\");\n    i0.ɵɵelementStart(3, \"tr\");\n    i0.ɵɵelementStart(4, \"th\", 3);\n    i0.ɵɵtext(5, \"#\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\", 4);\n    i0.ɵɵtext(7, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\", 5);\n    i0.ɵɵtext(9, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\", 5);\n    i0.ɵɵtext(11, \"Temp High (\\u00B0F)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\", 5);\n    i0.ɵɵtext(13, \"Temp Low (\\u00B0F)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"th\", 5);\n    i0.ɵɵtext(15, \"Wind Speed (mph)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"tbody\");\n    i0.ɵɵtemplate(17, TableComponent_div_1_tr_17_Template, 2, 1, \"tr\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(17);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.rows);\n  }\n}\n\nexport let TableComponent = /*#__PURE__*/(() => {\n  class TableComponent {\n    constructor(dataService, router) {\n      this.dataService = dataService;\n      this.router = router;\n      this.showTable = false;\n      this.headers = ['#', 'date', 'status', 'tempHigh', 'tempLow', 'windSpeed'];\n      this.rows = [];\n      this.imageString = \"\";\n      this.tomorrowObject = {};\n      this.detailsRequested = new EventEmitter();\n    }\n\n    constructDate(dateInfo) {\n      const daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      let yrMnthDay = dateInfo.split('T')[0].split('-');\n      let date = new Date(yrMnthDay[0], yrMnthDay[1] - 1, yrMnthDay[2]);\n      let dayOfWeek_index = date.getDay();\n      let dayOfWeek = daysOfWeek[dayOfWeek_index];\n      let month_index = date.getMonth();\n      let month = months[month_index];\n      return dayOfWeek + \", \" + yrMnthDay[2].toString() + ' ' + month + \", \" + yrMnthDay[0].toString();\n    }\n\n    constructStatus(weatherCode) {\n      const weatherCodes = {\n        0: \"Unknown\",\n        3000: \"Light Wind\",\n        3001: \"Wind\",\n        3002: \"Strong Wind\",\n        4201: \"Heavy Rain\",\n        4001: \"Rain\",\n        4200: \"Light Rain\",\n        6201: \"Heavy Freezing Rain\",\n        6001: \"Freezing Rain\",\n        6200: \"Light Freezing Rain\",\n        6000: \"Freezing Drizzle\",\n        4000: \"Drizzle\",\n        7101: \"Heavy Ice Pellets\",\n        7000: \"Ice Pellets\",\n        7102: \"Light Ice Pellets\",\n        5101: \"Heavy Snow\",\n        5000: \"Snow\",\n        5100: \"Light Snow\",\n        5001: \"Flurries\",\n        8000: \"Thunderstorm\",\n        2100: \"Light Fog\",\n        2000: \"Fog\",\n        1001: \"Cloudy\",\n        1102: \"Mostly Cloudy\",\n        1101: \"Partly Cloudy\",\n        1100: \"Mostly Clear\",\n        1000: \"Clear\"\n      };\n      return Object(weatherCodes)[weatherCode];\n    }\n\n    showDetails(day) {\n      let detailsObject = {};\n\n      if (day) {\n        for (let i = 0; i < 15; i++) {\n          if (day === this.constructDate(this.tomorrowObject.data.timelines[1].intervals[i].startTime)) {\n            detailsObject = {\n              date: day,\n              status: this.constructStatus(this.tomorrowObject.data.timelines[1].intervals[i].values.weatherCode),\n              maxTemp: this.tomorrowObject.data.timelines[1].intervals[i].values.temperatureMax.toString() + ' °F',\n              minTemp: this.tomorrowObject.data.timelines[1].intervals[i].values.temperatureMin.toString() + ' °F',\n              appTemp: this.tomorrowObject.data.timelines[1].intervals[i].values.temperatureApparent.toString() + ' °F',\n              sunrise: new Date(this.tomorrowObject.data.timelines[1].intervals[i].values.sunriseTime).toTimeString().split(' ')[0],\n              sunset: new Date(this.tomorrowObject.data.timelines[1].intervals[i].values.sunsetTime).toTimeString().split(' ')[0],\n              humidity: this.tomorrowObject.data.timelines[1].intervals[i].values.humidity.toString() + ' %',\n              windSpeed: this.tomorrowObject.data.timelines[1].intervals[i].values.windSpeed.toString() + ' mph',\n              visibility: this.tomorrowObject.data.timelines[1].intervals[i].values.visibility.toString() + ' mi',\n              cloudCover: this.tomorrowObject.data.timelines[1].intervals[i].values.cloudCover.toString() + ' %'\n            };\n          }\n        }\n      }\n\n      this.detailsRequested.emit(detailsObject);\n    }\n\n    ngOnInit() {\n      this.dataService.tomorrowObject.subscribe(data => {\n        if (Object.keys(data).length > 0) {\n          this.tomorrowObject = data;\n          this.showTable = true; // Populate table rows\n\n          for (let i = 0; i < 15; i++) {\n            let date_string = this.constructDate(data.data.timelines[1].intervals[i].startTime);\n            let status_string = this.constructStatus(data.data.timelines[1].intervals[i].values.weatherCode);\n            let status_img_string = this.constructStatus(data.data.timelines[1].intervals[i].values.weatherCode).toLowerCase().replace(/ /g, '_') + \".svg\";\n            let tempHigh_string = data.data.timelines[1].intervals[i].values.temperatureMax.toString();\n            let tempLow_string = data.data.timelines[1].intervals[i].values.temperatureMin.toString();\n            let windSpeed_string = data.data.timelines[1].intervals[i].values.windSpeed.toString();\n            this.rows.push({\n              '#': (i + 1).toString(),\n              'date': date_string,\n              'status_img': status_img_string,\n              'status': status_string,\n              'tempHigh': tempHigh_string,\n              'tempLow': tempLow_string,\n              'windSpeed': windSpeed_string\n            });\n          }\n        }\n      });\n    }\n\n  }\n\n  TableComponent.ɵfac = function TableComponent_Factory(t) {\n    return new (t || TableComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  TableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TableComponent,\n    selectors: [[\"app-table\"]],\n    outputs: {\n      detailsRequested: \"detailsRequested\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[\"class\", \"container\", 4, \"ngIf\"], [1, \"container\"], [1, \"table\", \"table-hover\"], [1, \"col-1\"], [1, \"col-3\"], [1, \"col-2\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"tableLink p-0\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"statusImg\", 3, \"src\", \"alt\", 4, \"ngIf\"], [\"class\", \"statusText\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"tableLink\", \"p-0\", 3, \"click\"], [1, \"statusImg\", 3, \"src\", \"alt\"], [1, \"statusText\"]],\n    template: function TableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"br\");\n        i0.ɵɵtemplate(1, TableComponent_div_1_Template, 18, 1, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showTable);\n      }\n    },\n    directives: [i3.NgIf, i3.NgForOf],\n    styles: [\"\"]\n  });\n  return TableComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}