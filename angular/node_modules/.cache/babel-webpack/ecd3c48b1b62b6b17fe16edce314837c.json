{"ast":null,"code":"export class Loader {\n  constructor(apiKey = null, options = {}) {\n    this.apiKey = apiKey;\n    this.options = options;\n\n    if (typeof window === 'undefined') {\n      throw new Error('google-maps is supported only in browser environment');\n    }\n  }\n\n  load() {\n    if (typeof this.api !== 'undefined') {\n      return Promise.resolve(this.api);\n    }\n\n    if (typeof this.loader !== 'undefined') {\n      return this.loader;\n    }\n\n    window[Loader.CALLBACK_NAME] = () => {\n      this.api = window['google'];\n\n      if (typeof this.resolve === 'undefined') {\n        throw new Error('Should not happen');\n      }\n\n      this.resolve(this.api);\n    };\n\n    window['gm_authFailure'] = () => {\n      if (typeof this.reject === 'undefined') {\n        throw new Error('Should not happen');\n      }\n\n      this.reject(new Error('google-maps: authentication error'));\n    };\n\n    return this.loader = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n      const script = document.createElement('script');\n      script.src = this.createUrl();\n      script.async = true;\n\n      script.onerror = e => reject(e);\n\n      document.head.appendChild(script);\n    });\n  }\n\n  createUrl() {\n    const parameters = [`callback=${Loader.CALLBACK_NAME}`];\n\n    if (this.apiKey) {\n      parameters.push(`key=${this.apiKey}`);\n    }\n\n    for (let name in this.options) {\n      if (this.options.hasOwnProperty(name)) {\n        let value = this.options[name];\n\n        if (name === 'version') {\n          name = 'v';\n        }\n\n        if (name === 'libraries') {\n          value = value.join(',');\n        }\n\n        parameters.push(`${name}=${value}`);\n      }\n    }\n\n    return `https://maps.googleapis.com/maps/api/js?${parameters.join('&')}`;\n  }\n\n}\nLoader.CALLBACK_NAME = '_dk_google_maps_loader_cb';","map":{"version":3,"sources":["/Users/avirk/Dev/college/csci571-fall21/hw8/angular-app/node_modules/google-maps/lib/esm/loader.js"],"names":["Loader","constructor","apiKey","options","window","Error","load","api","Promise","resolve","loader","CALLBACK_NAME","reject","script","document","createElement","src","createUrl","async","onerror","e","head","appendChild","parameters","push","name","hasOwnProperty","value","join"],"mappings":"AAAA,OAAO,MAAMA,MAAN,CAAa;AAChBC,EAAAA,WAAW,CAACC,MAAM,GAAG,IAAV,EAAgBC,OAAO,GAAG,EAA1B,EAA8B;AACrC,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAeA,OAAf;;AACA,QAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,YAAM,IAAIC,KAAJ,CAAU,sDAAV,CAAN;AACH;AACJ;;AACDC,EAAAA,IAAI,GAAG;AACH,QAAI,OAAO,KAAKC,GAAZ,KAAoB,WAAxB,EAAqC;AACjC,aAAOC,OAAO,CAACC,OAAR,CAAgB,KAAKF,GAArB,CAAP;AACH;;AACD,QAAI,OAAO,KAAKG,MAAZ,KAAuB,WAA3B,EAAwC;AACpC,aAAO,KAAKA,MAAZ;AACH;;AACDN,IAAAA,MAAM,CAACJ,MAAM,CAACW,aAAR,CAAN,GAA+B,MAAM;AACjC,WAAKJ,GAAL,GAAWH,MAAM,CAAC,QAAD,CAAjB;;AACA,UAAI,OAAO,KAAKK,OAAZ,KAAwB,WAA5B,EAAyC;AACrC,cAAM,IAAIJ,KAAJ,CAAU,mBAAV,CAAN;AACH;;AACD,WAAKI,OAAL,CAAa,KAAKF,GAAlB;AACH,KAND;;AAOAH,IAAAA,MAAM,CAAC,gBAAD,CAAN,GAA2B,MAAM;AAC7B,UAAI,OAAO,KAAKQ,MAAZ,KAAuB,WAA3B,EAAwC;AACpC,cAAM,IAAIP,KAAJ,CAAU,mBAAV,CAAN;AACH;;AACD,WAAKO,MAAL,CAAY,IAAIP,KAAJ,CAAU,mCAAV,CAAZ;AACH,KALD;;AAMA,WAAO,KAAKK,MAAL,GAAc,IAAIF,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AAClD,WAAKH,OAAL,GAAeA,OAAf;AACA,WAAKG,MAAL,GAAcA,MAAd;AACA,YAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,MAAAA,MAAM,CAACG,GAAP,GAAa,KAAKC,SAAL,EAAb;AACAJ,MAAAA,MAAM,CAACK,KAAP,GAAe,IAAf;;AACAL,MAAAA,MAAM,CAACM,OAAP,GAAkBC,CAAD,IAAOR,MAAM,CAACQ,CAAD,CAA9B;;AACAN,MAAAA,QAAQ,CAACO,IAAT,CAAcC,WAAd,CAA0BT,MAA1B;AACH,KARoB,CAArB;AASH;;AACDI,EAAAA,SAAS,GAAG;AACR,UAAMM,UAAU,GAAG,CACd,YAAWvB,MAAM,CAACW,aAAc,EADlB,CAAnB;;AAGA,QAAI,KAAKT,MAAT,EAAiB;AACbqB,MAAAA,UAAU,CAACC,IAAX,CAAiB,OAAM,KAAKtB,MAAO,EAAnC;AACH;;AACD,SAAK,IAAIuB,IAAT,IAAiB,KAAKtB,OAAtB,EAA+B;AAC3B,UAAI,KAAKA,OAAL,CAAauB,cAAb,CAA4BD,IAA5B,CAAJ,EAAuC;AACnC,YAAIE,KAAK,GAAG,KAAKxB,OAAL,CAAasB,IAAb,CAAZ;;AACA,YAAIA,IAAI,KAAK,SAAb,EAAwB;AACpBA,UAAAA,IAAI,GAAG,GAAP;AACH;;AACD,YAAIA,IAAI,KAAK,WAAb,EAA0B;AACtBE,UAAAA,KAAK,GAAGA,KAAK,CAACC,IAAN,CAAW,GAAX,CAAR;AACH;;AACDL,QAAAA,UAAU,CAACC,IAAX,CAAiB,GAAEC,IAAK,IAAGE,KAAM,EAAjC;AACH;AACJ;;AACD,WAAQ,2CAA0CJ,UAAU,CAACK,IAAX,CAAgB,GAAhB,CAAqB,EAAvE;AACH;;AA1De;AA4DpB5B,MAAM,CAACW,aAAP,GAAuB,2BAAvB","sourcesContent":["export class Loader {\n    constructor(apiKey = null, options = {}) {\n        this.apiKey = apiKey;\n        this.options = options;\n        if (typeof window === 'undefined') {\n            throw new Error('google-maps is supported only in browser environment');\n        }\n    }\n    load() {\n        if (typeof this.api !== 'undefined') {\n            return Promise.resolve(this.api);\n        }\n        if (typeof this.loader !== 'undefined') {\n            return this.loader;\n        }\n        window[Loader.CALLBACK_NAME] = () => {\n            this.api = window['google'];\n            if (typeof this.resolve === 'undefined') {\n                throw new Error('Should not happen');\n            }\n            this.resolve(this.api);\n        };\n        window['gm_authFailure'] = () => {\n            if (typeof this.reject === 'undefined') {\n                throw new Error('Should not happen');\n            }\n            this.reject(new Error('google-maps: authentication error'));\n        };\n        return this.loader = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n            const script = document.createElement('script');\n            script.src = this.createUrl();\n            script.async = true;\n            script.onerror = (e) => reject(e);\n            document.head.appendChild(script);\n        });\n    }\n    createUrl() {\n        const parameters = [\n            `callback=${Loader.CALLBACK_NAME}`,\n        ];\n        if (this.apiKey) {\n            parameters.push(`key=${this.apiKey}`);\n        }\n        for (let name in this.options) {\n            if (this.options.hasOwnProperty(name)) {\n                let value = this.options[name];\n                if (name === 'version') {\n                    name = 'v';\n                }\n                if (name === 'libraries') {\n                    value = value.join(',');\n                }\n                parameters.push(`${name}=${value}`);\n            }\n        }\n        return `https://maps.googleapis.com/maps/api/js?${parameters.join('&')}`;\n    }\n}\nLoader.CALLBACK_NAME = '_dk_google_maps_loader_cb';\n"]},"metadata":{},"sourceType":"module"}